services:
  db:
    image: mysql:8.4.0
    networks:
      - my-network
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_USER_PASSWORD}
      MYSQL_DATABASE: db
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_USER_PASSWORD}
    ports:
      - "3306:3306"
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 20s
      timeout: 5s
      retries: 5

  backend-server:
    build:
      context: .
      dockerfile: ./Backend/BackendServer/Dockerfile
    networks:
      - my-network
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__MySql=Server=db;Database=${DB_NAME};User=${DB_USERNAME};Password=${DB_USER_PASSWORD};Port=${DB_PORT};

  frontend:
    volumes:
      - ./frontend:/app
      - /app/node_modules
    build:
      context: ./frontend
      dockerfile: Dockerfile
    networks:
      - my-network
    ports:
      - "5173:5173"
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /app
          ignore:
            - node_modules
    environment:
      - VITE_API_URL=http://backend-server:8080

networks:
  my-network: